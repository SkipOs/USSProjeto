<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Logo.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="Logo.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Logo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>