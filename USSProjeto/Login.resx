<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Logo.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="Logo.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Logo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>